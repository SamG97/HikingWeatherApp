package uk.ac.cam.group7.interaction_design.hiking_app;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class OptionsMenu {


	private static OptionsMenu single;
	
	private OptionsMenu(AddedLocation currLoc){
		
		  JFrame   optionsPanel = new JFrame("Options panel");
	      optionsPanel.setMinimumSize(new Dimension(500,350));
		 optionsPanel.setLocation(450, 200);
		  optionsPanel.setResizable(false);
	      optionsPanel.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
	     
	    
	      optionsPanel.addWindowListener(new WindowAdapter() {
	 	  	public void windowClosing(WindowEvent e) {
	 	  	 int i = JOptionPane.showConfirmDialog( optionsPanel,
                     "Are you sure to exit?", "Closing dialog",
                     JOptionPane.YES_NO_OPTION);
             if (i == JOptionPane.YES_OPTION) {
            	 single=null;
                  optionsPanel.setVisible(false);
             }
	 	  	}
         
     });
	   
	     JLabel jlabel;
	    
	    if(currLoc.getLoc().getName().equals(""))
		jlabel = new  JLabel("Name: "+currLoc.getLoc().toString(),JLabel.CENTER);
	    else 
	     jlabel = new JLabel("Name: "+currLoc.getLoc().getName()+" Coordinates: "+currLoc.getLoc().getLatitude()+" "+currLoc.getLoc().getLongitude(),JLabel.CENTER);	 
	     
	     
		 jlabel.setFont(new Font("Courier New", Font.BOLD, 16));
		 jlabel.setPreferredSize(new Dimension(500,40));
		 jlabel.setForeground(Color.DARK_GRAY);
	
		 JTextField inputForName = new JTextField("type here");
		 inputForName.setPreferredSize(new Dimension(300,40));
		 
		MyButton rename = new MyButton("Rename");
		   rename.addActionListener(new ActionListener() {
	       
	            @Override
	            public void actionPerformed(ActionEvent event) {
	            		currLoc.setName(inputForName.getText());
	            		jlabel.setText("Name: "+inputForName.getText());
	            		MainScreen.renameLoc(currLoc, inputForName.getText());	            		
	            	     optionsPanel.setVisible(true);
	            	}
	         		   });
		   rename.addFocusListener(new FocusListener() {
	            @Override
	            public void focusGained(FocusEvent e) {
	                if(rename.getText().equals("New Name")) {
	                	rename.setText("");
	                }
	            }

	            @Override
	            public void focusLost(FocusEvent e) {
	                if (rename.getText().equals("")){
	                	rename.setText("New Name");
	                }
	            }
	        });
		JPanel container = new JPanel()	;
		container.setMaximumSize(new Dimension(500,200));
		container.add(jlabel);
		container.add(rename);
		container.add(inputForName);
		container.setLayout(new BoxLayout(container, BoxLayout.Y_AXIS));
		container.setAlignmentX(Component.LEFT_ALIGNMENT);
		JCheckBox mFav = new JCheckBox();
		mFav.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
            	currLoc.getLoc().toggleFavourite();
              
            }
        });
	
		
		 optionsPanel.add(container,BorderLayout.NORTH);
		JPanel container2 = new JPanel()	;
		container2.setMaximumSize(new Dimension(500,150));
		
		 
		MyButton delete = new MyButton("Delete");
		   delete.addActionListener(new ActionListener() {
	       
	            @Override
	            public void actionPerformed(ActionEvent event) {
	            	
	            	
	            	int i = JOptionPane.showConfirmDialog( optionsPanel,
	                        "Do you want to delete this location?", "Deleting dialog",
	                        JOptionPane.YES_NO_OPTION);
	                if (i == JOptionPane.YES_OPTION) {
	                     optionsPanel.setVisible(false);
	            		MainScreen.removeLoc(currLoc);	            			     
	            		  single=null;
	            		   optionsPanel.dispose();
	                }
		
	            	
	            }
		   });
		   container2.add(delete);
		    optionsPanel.add(delete);
		
		 optionsPanel.setVisible(true);
		
}
	public static void createToday(AddedLocation  currLoc)
	{
		
		if(single==null){
			
			single  = new OptionsMenu(currLoc);
		}
			
		
			
	}
}
