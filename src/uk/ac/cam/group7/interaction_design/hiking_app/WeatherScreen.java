package uk.ac.cam.group7.interaction_design.hiking_app;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.LinkedList;
import java.util.List;

/**
 * Weather panel that shows up after we click on an location
 * Created by dobrik on 13.05.17.
 */
public class WeatherScreen extends JFrame {
    private JButton mBackButton;
    private JCheckBox mFav;
    private JPanel WeatherPanel;
    private JLabel location;
    private JLabel sunrise;
    private JLabel sunset;
    private JButton tueButton;
    private JButton wedButton;
    private JLabel DangerLabel;
    private JButton thuButton;
    private JButton friButton;
    private JScrollPane mHourlyForecast;
    private JPanel mHourlyForecastPanel;
    //protected MainScreen mainMenu;

    /**
     * Constructor for the weather screen
     *
     * @param _loc takes a location as a parameter
     */
    public WeatherScreen(Location _loc) {
        setTitle("blah");
        setSize(900, 700);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        add(WeatherPanel);
        location.setText(_loc.toString());
        mFav.setSelected(_loc.isFavourite());
        /**
         * Back button features
         */
        mBackButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                dispose();
                MainScreen.getWindow().setVisible(true);
            }
        });
        this.setVisible(true);
        /**
         * make favourite features
         */
        mFav.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                _loc.setFavourite(!_loc.isFavourite());
                //System.out.print(_loc.isFavourite());
            }
        });
        List<String> test = new LinkedList<String>();
        for (int i = 1; i <= 100; i++) test.add("se");
        mHourlyForecast = new JScrollPane(new JList(test.toArray()));
        mHourlyForecastPanel.add(mHourlyForecast, BorderLayout.CENTER);

        //mHourlyForecast = new JScrollPane()
        //JList<String> test = new JList<String>(["ss", "g", "i"]);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        WeatherPanel = new JPanel();
        WeatherPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 4, new Insets(0, 0, 0, 0), -1, -1));
        WeatherPanel.setOpaque(true);
        sunrise = new JLabel();
        sunrise.setText("Sunrise:");
        WeatherPanel.add(sunrise, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        sunset = new JLabel();
        sunset.setText("Sunset:");
        WeatherPanel.add(sunset, new com.intellij.uiDesigner.core.GridConstraints(1, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mBackButton = new JButton();
        mBackButton.setHorizontalAlignment(2);
        mBackButton.setHorizontalTextPosition(0);
        mBackButton.setText("Back");
        mBackButton.setVerticalAlignment(0);
        mBackButton.setVerticalTextPosition(0);
        WeatherPanel.add(mBackButton, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, new Dimension(63, 33), null, 0, false));
        location = new JLabel();
        location.setText("");
        location.setVerticalAlignment(1);
        WeatherPanel.add(location, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTH, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, new Dimension(0, 30), null, 0, false));
        wedButton = new JButton();
        wedButton.setText("Wed");
        WeatherPanel.add(wedButton, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tueButton = new JButton();
        tueButton.setText("Tue");
        WeatherPanel.add(tueButton, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        DangerLabel = new JLabel();
        DangerLabel.setBackground(new Color(-2093056));
        DangerLabel.setFont(new Font(DangerLabel.getFont().getName(), DangerLabel.getFont().getStyle(), 24));
        DangerLabel.setForeground(new Color(-16777216));
        DangerLabel.setOpaque(true);
        DangerLabel.setText("DANGER! BAD WEATHER OUTSIDE!");
        DangerLabel.setVisible(false);
        WeatherPanel.add(DangerLabel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, new Dimension(100, 10), null, null, 0, false));
        thuButton = new JButton();
        thuButton.setText("Thu");
        WeatherPanel.add(thuButton, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        friButton = new JButton();
        friButton.setText("Fri");
        WeatherPanel.add(friButton, new com.intellij.uiDesigner.core.GridConstraints(4, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mHourlyForecastPanel = new JPanel();
        mHourlyForecastPanel.setLayout(new BorderLayout(0, 0));
        WeatherPanel.add(mHourlyForecastPanel, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        mFav = new JCheckBox();
        mFav.setLabel("Fav");
        mFav.setText("Fav");
        WeatherPanel.add(mFav, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return WeatherPanel;
    }

    //    public static void main(String args[]) {
//        Location rns=new Location(1,2,"KypBa");
//        rns.setFavourite(true);
//        JFrame test=new WeatherScreen(rns);
//    }
}
